-- Generated by Oracle SQL Developer Data Modeler 17.4.0.355.2121
--   at:        2018-09-03 18:21:12 BRT
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE tb_access_level (
    access_level_id   uniqueidentifier NOT NULL,
    module_id         uniqueidentifier NOT NULL,
    name              VARCHAR(20),
    dsc               VARCHAR(50)
)
    ON "default" 

ALTER TABLE TB_ACCESS_LEVEL ADD constraint tb_access_level_pk PRIMARY KEY CLUSTERED (access_level_id, module_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_account (
    acccount_id         uniqueidentifier NOT NULL,
    balance             FLOAT,
    account_type_id     uniqueidentifier NOT NULL,
    account_status_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_ACCOUNT ADD constraint tb_account_pk PRIMARY KEY CLUSTERED (acccount_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_account_status (
    account_status_id   uniqueidentifier NOT NULL,
    dsc                 VARCHAR(20)
)
    ON "default" 

ALTER TABLE TB_ACCOUNT_STATUS ADD constraint tb_account_status_pk PRIMARY KEY CLUSTERED (account_status_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_account_type (
    account_type_id   uniqueidentifier NOT NULL,
    dsc               VARCHAR(20)
)
    ON "default" 

ALTER TABLE TB_ACCOUNT_TYPE ADD constraint tb_account_type_pk PRIMARY KEY CLUSTERED (account_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_account_wristband (
    acccount_id   uniqueidentifier NOT NULL,
    limit         FLOAT,
    wrt_uid       VARCHAR(16) NOT NULL
)
    ON "default" 

ALTER TABLE TB_ACCOUNT_WRISTBAND ADD constraint tb_account_wristband_pk PRIMARY KEY CLUSTERED (acccount_id, wrt_uid)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_atendee

(
    atendee_ruid   uniqueidentifier NOT NULL,
    id             VARCHAR(15) NOT NULL,
    id_type        INTEGER NOT NULL,
    name           VARCHAR(70),
    birth          DATE,
    address        VARCHAR(70),
    zipcode        VARCHAR(15),
    country        VARCHAR(70),
    phone1         VARCHAR(20),
    phone2         VARCHAR(20),
    email          VARCHAR(70),
    ticketid       VARCHAR(15),
    image_patch    VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_ATENDEE ADD constraint tb_client_pk PRIMARY KEY CLUSTERED (atendee_ruid)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_atendee_event (
    atendee_ruid   uniqueidentifier NOT NULL,
    event_id       uniqueidentifier NOT NULL,
    event_day_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_ATENDEE_EVENT ADD constraint tb_client_event_pk PRIMARY KEY CLUSTERED (atendee_ruid, event_day_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_atendee_id_type (
    id_type   INTEGER NOT NULL,
    dsc       VARCHAR(15)
)
    ON "default" 

ALTER TABLE TB_ATENDEE_ID_TYPE ADD constraint tb_client_id_type_pk PRIMARY KEY CLUSTERED (id_type)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_atendee_wristband (
    atendee_ruid        uniqueidentifier NOT NULL,
    wrt_uid             VARCHAR(16) NOT NULL,
    register_datetime   datetime
)
    ON "default"
 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    TB_ATENDEE_WRISTBAND__IDX ON TB_ATENDEE_WRISTBAND 
    ( 
     wrt_uid 
    ) 
    ON "default" 
 


CREATE UNIQUE NONCLUSTERED INDEX 
    TB_ATENDEE_WRISTBAND__IDXv1 ON tb_atendee_wristband ( atendee_ruid ) 
    ON "default" 

ALTER TABLE TB_ATENDEE_WRISTBAND ADD constraint tb_atendee_wristband_pk PRIMARY KEY CLUSTERED (atendee_ruid, wrt_uid)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_attendance (
    event_day_id   uniqueidentifier NOT NULL,
    wrt_uid        VARCHAR(16) NOT NULL,
    checkin        datetime,
    checkout       datetime,
    sub_event_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_ATTENDANCE ADD constraint tb_area_wristband_pk PRIMARY KEY CLUSTERED (event_day_id, wrt_uid, sub_event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_blacklist (
    atendee_ruid   uniqueidentifier NOT NULL,
    event_id       uniqueidentifier NOT NULL,
                                 reason         image,
                                 deleted        bit
)
    ON "default" 

ALTER TABLE TB_BLACKLIST ADD constraint tb_blacklist_pk PRIMARY KEY CLUSTERED (atendee_ruid, event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_calendar (
    wrt_uid        VARCHAR(16) NOT NULL,
    sub_event_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_CALENDAR ADD constraint tb_agenda_pk PRIMARY KEY CLUSTERED (wrt_uid, sub_event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_combo (
    combo_id   uniqueidentifier NOT NULL,
    dsc        VARCHAR(50)
)
    ON "default" 

ALTER TABLE TB_COMBO ADD constraint tb_combo_pk PRIMARY KEY CLUSTERED (combo_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_copartner

(
    copartner_id   uniqueidentifier NOT NULL,
    name           VARCHAR(70),
    address        VARCHAR(70),
    zipcode        VARCHAR(15),
    country        VARCHAR(70),
    phone1         VARCHAR(20),
    phone2         VARCHAR(20),
    email          VARCHAR(70),
    event_id       uniqueidentifier NOT NULL,
    event_day_id   uniqueidentifier NOT NULL,
    image_patch    VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_COPARTNER ADD constraint tb_copartner_pk PRIMARY KEY CLUSTERED (copartner_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_copartner_product (
    copartner_id   uniqueidentifier NOT NULL,
    product_id     uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_COPARTNER_PRODUCT ADD constraint tb_copartner_product_pk PRIMARY KEY CLUSTERED (copartner_id, product_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_day_copartner (
    event_day_id   uniqueidentifier NOT NULL,
    copartner_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_DAY_COPARTNER ADD constraint tb_event_day_copartner_pk PRIMARY KEY CLUSTERED (copartner_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_device (
    device_id   uniqueidentifier NOT NULL,
    name        VARCHAR(20),
    brand       VARCHAR(15),
    model       VARCHAR(15),
    dsc         VARCHAR(50)
)
    ON "default" 

ALTER TABLE TB_DEVICE ADD constraint tb_device_pk PRIMARY KEY CLUSTERED (device_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_event

(
    event_id         uniqueidentifier NOT NULL,
    name             VARCHAR(70),
    address          VARCHAR(70),
    zipcode          VARCHAR(15),
    country          VARCHAR(70),
    capacity         INTEGER,
    datetime_open    datetime,
    datetime_close   datetime,
    event_owner_id   uniqueidentifier NOT NULL,
    image_patch      VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_EVENT ADD constraint tb_event_pk PRIMARY KEY CLUSTERED (event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_event_area (
    area_id          uniqueidentifier NOT NULL,
    area_name        VARCHAR(50),
    dsc              VARCHAR(50),
    datetime_open    datetime,
    datetime_close   datetime,
    event_day_id     uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_EVENT_AREA ADD constraint tb_event_area_pk PRIMARY KEY CLUSTERED (area_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_event_day (
    event_id         uniqueidentifier NOT NULL,
    event_day_id     uniqueidentifier NOT NULL,
                                     datetime_open    datetime,
                                     datetime_close   datetime
)
    ON "default" 

ALTER TABLE TB_EVENT_DAY ADD constraint tb_event_day_pk PRIMARY KEY CLUSTERED (event_day_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_event_owner

(
    event_owner_id   uniqueidentifier NOT NULL,
    id               VARCHAR(50),
    name             VARCHAR(255),
    address          VARCHAR(70),
    zipcode          VARCHAR(15),
    country          VARCHAR(70),
    contact_name     VARCHAR(50),
    phone1           VARCHAR(20),
    phone2           VARCHAR(20),
    email            VARCHAR(70),
    image_patch      VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_EVENT_OWNER ADD constraint tb_event_owner_pk PRIMARY KEY CLUSTERED (event_owner_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_general_config (
    id            uniqueidentifier NOT NULL,
    dsc           image,
    value         image,
    source        image,
    external_id   VARCHAR(15)
)
    ON "default" 

ALTER TABLE TB_GENERAL_CONFIG ADD constraint tb_general_config_pk PRIMARY KEY CLUSTERED (id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_list (
    list_id         uniqueidentifier NOT NULL,
    dsc             VARCHAR(50),
    charge_amount   bigint,
    topup_amount    bigint,
    user_id         uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_LIST ADD constraint tb_list_pk PRIMARY KEY CLUSTERED (list_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_list_names (
    list_name              VARCHAR(50) NOT NULL,
    list_name_identifyer   VARCHAR(20) NOT NULL,
    valid                  binary,
    list_id                uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_LIST_NAMES ADD constraint tb_list_names_pk PRIMARY KEY CLUSTERED (list_name, list_name_identifyer)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_log (
    log_id        uniqueidentifier NOT NULL,
    log_type_id   uniqueidentifier NOT NULL,
    module_id     uniqueidentifier NOT NULL,
                                  log_dsc       image
)
    ON "default" 

ALTER TABLE TB_LOG ADD constraint tb_log_pk PRIMARY KEY CLUSTERED (log_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_log_type (
    log_type_id   uniqueidentifier NOT NULL,
    name          VARCHAR(20),
    dsc           VARCHAR(255)
)
    ON "default" 

ALTER TABLE TB_LOG_TYPE ADD constraint tb_log_type_pk PRIMARY KEY CLUSTERED (log_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_order (
    order_id         uniqueidentifier NOT NULL,
    wrt_uid          VARCHAR(16) NOT NULL,
    order_datetime   datetime NOT NULL,
    total            bigint,
    device_id        uniqueidentifier NOT NULL,
    user_id          uniqueidentifier NOT NULL,
    event_day_id     uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_ORDER ADD constraint tb_order_pk PRIMARY KEY CLUSTERED (order_id, wrt_uid, order_datetime, event_day_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_order_product (
    order_id         uniqueidentifier NOT NULL,
    wrt_uid          VARCHAR(16) NOT NULL,
    copartner_id     uniqueidentifier NOT NULL,
    product_id       uniqueidentifier NOT NULL,
    id_salepoint     uniqueidentifier NOT NULL,
    order_datetime   datetime NOT NULL,
    qtty             INTEGER,
    event_day_id     uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_ORDER_PRODUCT ADD constraint tb_order_product_pk PRIMARY KEY CLUSTERED (order_id, wrt_uid, order_datetime, event_day_id, copartner_id, product_id, id_salepoint)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_product

(
    product_id    uniqueidentifier NOT NULL,
    name          VARCHAR(15),
    dsc           VARCHAR(50),
    cost          bigint,
    saleprice     bigint,
    qtty          bigint,
    image_patch   VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_PRODUCT ADD constraint tb_product_pk PRIMARY KEY CLUSTERED (product_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_product_combo

(
    product_id   uniqueidentifier NOT NULL,
    combo_id     uniqueidentifier NOT NULL,
    qtty         INTEGER,
    cost         bigint,
    saleprice    bigint,
    image_path   VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_PRODUCT_COMBO ADD constraint tb_product_combo_pk PRIMARY KEY CLUSTERED (product_id, combo_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_salepoint (
    id_salepoint   uniqueidentifier NOT NULL,
    dsc            VARCHAR(50),
    copartner_id   uniqueidentifier NOT NULL,
    area_id        uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_SALEPOINT ADD constraint tb_salepoint_pk PRIMARY KEY CLUSTERED (id_salepoint)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_sub_event

(
    sub_event_id     uniqueidentifier NOT NULL,
    name             VARCHAR(20),
    datetime_start   datetime,
    datetime_end     datetime,
    area_id          uniqueidentifier NOT NULL,
    image_patch      VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_SUB_EVENT ADD constraint tb_sub_event_pk PRIMARY KEY CLUSTERED (sub_event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_system_module

(
    module_id     uniqueidentifier NOT NULL,
    module_name   VARCHAR(20),
    dsc           VARCHAR(50),
    config        VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_SYSTEM_MODULE ADD constraint tb_system_module_pk PRIMARY KEY CLUSTERED (module_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_transaction (
    trn_id         uniqueidentifier NOT NULL,
    trn_type_id    uniqueidentifier NOT NULL,
    acccount_id    uniqueidentifier NOT NULL,
    trn_datetime   datetime,
    amount         bigint,
    module_id      uniqueidentifier NOT NULL,
    device_id      uniqueidentifier NOT NULL,
    user_id        uniqueidentifier NOT NULL,
    log_id         uniqueidentifier NOT NULL,
    trn_id1        uniqueidentifier NOT NULL,
    wrt_uid        VARCHAR(16) NOT NULL
)
    ON "default"
 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    TB_TRANSACTION__IDX ON tb_transaction ( trn_id1 ) 
    ON "default" 

ALTER TABLE TB_TRANSACTION ADD constraint tb_transaction_pk PRIMARY KEY CLUSTERED (trn_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_transaction_type (
    trn_type_id   uniqueidentifier NOT NULL,
    dsc           VARCHAR(20)
)
    ON "default" 

ALTER TABLE TB_TRANSACTION_TYPE ADD constraint tb_transaction_type_pk PRIMARY KEY CLUSTERED (trn_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_user

(
    user_id           uniqueidentifier NOT NULL,
    name              VARCHAR(50),
    pwd               VARCHAR(20),
    access_level_id   uniqueidentifier NOT NULL,
    user_type_id      uniqueidentifier NOT NULL,
    module_id         uniqueidentifier NOT NULL,
    image_patch       VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_USER ADD constraint tb_user_pk PRIMARY KEY CLUSTERED (user_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_user_access_level (
    access_level_id   uniqueidentifier NOT NULL,
    module_id         uniqueidentifier NOT NULL,
    user_id           uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_USER_ACCESS_LEVEL ADD constraint entity_34_pk PRIMARY KEY CLUSTERED (user_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_user_device (
    device_id   uniqueidentifier NOT NULL,
    user_id     uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_USER_DEVICE ADD constraint tb_user_device_pk PRIMARY KEY CLUSTERED (device_id, user_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_user_type (
    user_type_id   uniqueidentifier NOT NULL,
    dsc            VARCHAR(50)
)
    ON "default" 

ALTER TABLE TB_USER_TYPE ADD constraint tb_user_type_pk PRIMARY KEY CLUSTERED (user_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wristband (
    wrt_uid               VARCHAR(16) NOT NULL,
    wrt_type_id           uniqueidentifier NOT NULL,
    event_id              uniqueidentifier NOT NULL,
    event_day_id          uniqueidentifier NOT NULL,
    wristband_status_id   uniqueidentifier NOT NULL,
    wrt_code              VARCHAR(6)
)
    ON "default" 

ALTER TABLE TB_WRISTBAND ADD constraint tb_wristband_pk PRIMARY KEY CLUSTERED (wrt_uid)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wristband_day (
    event_day_id   uniqueidentifier NOT NULL,
    wrt_type_id    uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_WRISTBAND_DAY ADD constraint tb_wristband_day_pk PRIMARY KEY CLUSTERED (event_day_id, wrt_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wristband_status (
    wristband_status_id   uniqueidentifier NOT NULL,
    dsc                   VARCHAR(15)
)
    ON "default" 

ALTER TABLE TB_WRISTBAND_STATUS ADD constraint tb_wristband_status_pk PRIMARY KEY CLUSTERED (wristband_status_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wristband_sub_event (
    wrt_type_id    uniqueidentifier NOT NULL,
    sub_event_id   uniqueidentifier NOT NULL
)
    ON "default" 

ALTER TABLE TB_WRISTBAND_SUB_EVENT ADD constraint tb_wristband_area_pk PRIMARY KEY CLUSTERED (wrt_type_id, sub_event_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wrt_sub_type (
    wrt_sub_type_id   uniqueidentifier NOT NULL,
    name              VARCHAR(15),
    dsc               VARCHAR(50)
)
    ON "default" 

ALTER TABLE TB_WRT_SUB_TYPE ADD constraint tb_wrt_color_pk PRIMARY KEY CLUSTERED (wrt_sub_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

CREATE TABLE tb_wrt_type

(
    wrt_type_id       uniqueidentifier NOT NULL,
    name              VARCHAR(50),
    dsc               VARCHAR(50),
    wrt_sub_type_id   uniqueidentifier NOT NULL,
    image_patch       VARCHAR
(max) 
    )
    ON "default" 

ALTER TABLE TB_WRT_TYPE ADD constraint tb_wrt_type_pk PRIMARY KEY CLUSTERED (wrt_type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 

ALTER TABLE TB_USER_ACCESS_LEVEL
    ADD CONSTRAINT access_level_user_fk FOREIGN KEY ( access_level_id,
    module_id )
        REFERENCES tb_access_level ( access_level_id,
        module_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ACCOUNT_WRISTBAND
    ADD CONSTRAINT account_wristband_fk FOREIGN KEY ( acccount_id )
        REFERENCES tb_account ( acccount_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT account_wristband_trn_fk FOREIGN KEY ( acccount_id,
    wrt_uid )
        REFERENCES tb_account_wristband ( acccount_id,
        wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_SALEPOINT
    ADD CONSTRAINT area_salepoint_fk FOREIGN KEY ( area_id )
        REFERENCES tb_event_area ( area_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_SUB_EVENT
    ADD CONSTRAINT area_sub_event_fk FOREIGN KEY ( area_id )
        REFERENCES tb_event_area ( area_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_BLACKLIST
    ADD CONSTRAINT atendee_blacklist_fk FOREIGN KEY ( atendee_ruid )
        REFERENCES tb_atendee ( atendee_ruid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATENDEE_EVENT
    ADD CONSTRAINT cient_event_fk FOREIGN KEY ( atendee_ruid )
        REFERENCES tb_atendee ( atendee_ruid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATENDEE_WRISTBAND
    ADD CONSTRAINT client_wrt_fk FOREIGN KEY ( wrt_uid )
        REFERENCES tb_wristband ( wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_PRODUCT_COMBO
    ADD CONSTRAINT combo_product_fk FOREIGN KEY ( combo_id )
        REFERENCES tb_combo ( combo_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_DAY_COPARTNER
    ADD CONSTRAINT copartner_day_fk FOREIGN KEY ( copartner_id )
        REFERENCES tb_copartner ( copartner_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_SALEPOINT
    ADD CONSTRAINT copartner_salepoint_fk FOREIGN KEY ( copartner_id )
        REFERENCES tb_copartner ( copartner_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_COPARTNER_PRODUCT
    ADD CONSTRAINT copartnet_product_fk FOREIGN KEY ( copartner_id )
        REFERENCES tb_copartner ( copartner_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_DAY_COPARTNER
    ADD CONSTRAINT day_copartner_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND_DAY
    ADD CONSTRAINT day_wristband_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_USER_DEVICE
    ADD CONSTRAINT device_user_fk FOREIGN KEY ( device_id )
        REFERENCES tb_device ( device_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_BLACKLIST
    ADD CONSTRAINT event_blacklist_fk FOREIGN KEY ( event_id )
        REFERENCES tb_event ( event_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATTENDANCE
    ADD CONSTRAINT event_day_access_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_EVENT_AREA
    ADD CONSTRAINT event_day_area_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATENDEE_EVENT
    ADD CONSTRAINT event_day_client_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_EVENT_DAY
    ADD CONSTRAINT event_day_fk FOREIGN KEY ( event_id )
        REFERENCES tb_event ( event_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER
    ADD CONSTRAINT event_day_transaction_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND
    ADD CONSTRAINT event_day_wristband_fk FOREIGN KEY ( event_day_id )
        REFERENCES tb_event_day ( event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATENDEE
    ADD CONSTRAINT id_type_fk FOREIGN KEY ( id_type )
        REFERENCES tb_atendee_id_type ( id_type )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_LIST_NAMES
    ADD CONSTRAINT list_names_fk FOREIGN KEY ( list_id )
        REFERENCES tb_list ( list_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT log_trn_fk FOREIGN KEY ( log_id )
        REFERENCES tb_log ( log_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_LOG
    ADD CONSTRAINT log_type_fk FOREIGN KEY ( log_type_id )
        REFERENCES tb_log_type ( log_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ACCESS_LEVEL
    ADD CONSTRAINT module_access_level_fk FOREIGN KEY ( module_id )
        REFERENCES tb_system_module ( module_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_LOG
    ADD CONSTRAINT module_log_fk FOREIGN KEY ( module_id )
        REFERENCES tb_system_module ( module_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT module_trn_fk FOREIGN KEY ( module_id )
        REFERENCES tb_system_module ( module_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER_PRODUCT
    ADD CONSTRAINT order_product_fk FOREIGN KEY ( order_id,
    wrt_uid,
    order_datetime,
    event_day_id )
        REFERENCES tb_order ( order_id,
        wrt_uid,
        order_datetime,
        event_day_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER_PRODUCT
    ADD CONSTRAINT order_seller_fk FOREIGN KEY ( copartner_id,
    product_id )
        REFERENCES tb_copartner_product ( copartner_id,
        product_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_EVENT
    ADD CONSTRAINT owner_event_fk FOREIGN KEY ( event_owner_id )
        REFERENCES tb_event_owner ( event_owner_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_PRODUCT_COMBO
    ADD CONSTRAINT product_combo_fk FOREIGN KEY ( product_id )
        REFERENCES tb_product ( product_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_COPARTNER_PRODUCT
    ADD CONSTRAINT product_copartner_fk FOREIGN KEY ( product_id )
        REFERENCES tb_product ( product_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_USER_ACCESS_LEVEL
    ADD CONSTRAINT relation_56 FOREIGN KEY ( user_id )
        REFERENCES tb_user ( user_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER_PRODUCT
    ADD CONSTRAINT salepoint_order_fk FOREIGN KEY ( id_salepoint )
        REFERENCES tb_salepoint ( id_salepoint )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ACCOUNT
    ADD CONSTRAINT status_account_fk FOREIGN KEY ( account_status_id )
        REFERENCES tb_account_status ( account_status_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND
    ADD CONSTRAINT status_wristband_fk FOREIGN KEY ( wristband_status_id )
        REFERENCES tb_wristband_status ( wristband_status_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATTENDANCE
    ADD CONSTRAINT sub_event_access_control_fk FOREIGN KEY ( sub_event_id )
        REFERENCES tb_sub_event ( sub_event_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_CALENDAR
    ADD CONSTRAINT sub_event_agenda_fk FOREIGN KEY ( sub_event_id )
        REFERENCES tb_sub_event ( sub_event_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND_SUB_EVENT
    ADD CONSTRAINT sub_event_wrt_fk FOREIGN KEY ( sub_event_id )
        REFERENCES tb_sub_event ( sub_event_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT trn_trn_fk FOREIGN KEY ( trn_id1 )
        REFERENCES tb_transaction ( trn_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT trn_type_fk FOREIGN KEY ( trn_type_id )
        REFERENCES tb_transaction_type ( trn_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ACCOUNT
    ADD CONSTRAINT type_account_fk FOREIGN KEY ( account_type_id )
        REFERENCES tb_account_type ( account_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_USER
    ADD CONSTRAINT type_user_fk FOREIGN KEY ( user_type_id )
        REFERENCES tb_user_type ( user_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_USER_DEVICE
    ADD CONSTRAINT user_device_fk FOREIGN KEY ( user_id )
        REFERENCES tb_user ( user_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER
    ADD CONSTRAINT user_device_order_fk FOREIGN KEY ( device_id,
    user_id )
        REFERENCES tb_user_device ( device_id,
        user_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_TRANSACTION
    ADD CONSTRAINT user_device_trn_fk FOREIGN KEY ( device_id,
    user_id )
        REFERENCES tb_user_device ( device_id,
        user_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_LIST
    ADD CONSTRAINT user_list_fk FOREIGN KEY ( user_id )
        REFERENCES tb_user ( user_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ACCOUNT_WRISTBAND
    ADD CONSTRAINT wristband_account_fk FOREIGN KEY ( wrt_uid )
        REFERENCES tb_wristband ( wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_CALENDAR
    ADD CONSTRAINT wristband_agenda_fk FOREIGN KEY ( wrt_uid )
        REFERENCES tb_wristband ( wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND_DAY
    ADD CONSTRAINT wristband_day_fk FOREIGN KEY ( wrt_type_id )
        REFERENCES tb_wrt_type ( wrt_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ORDER
    ADD CONSTRAINT wristband_order_fk FOREIGN KEY ( wrt_uid )
        REFERENCES tb_wristband ( wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND_SUB_EVENT
    ADD CONSTRAINT wristband_type_fk FOREIGN KEY ( wrt_type_id )
        REFERENCES tb_wrt_type ( wrt_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATTENDANCE
    ADD CONSTRAINT wrt_access_fk FOREIGN KEY ( wrt_uid )
        REFERENCES tb_wristband ( wrt_uid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_ATENDEE_WRISTBAND
    ADD CONSTRAINT wrt_client_fk FOREIGN KEY ( atendee_ruid )
        REFERENCES tb_atendee ( atendee_ruid )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRT_TYPE
    ADD CONSTRAINT wrt_color_fk FOREIGN KEY ( wrt_sub_type_id )
        REFERENCES tb_wrt_sub_type ( wrt_sub_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 

ALTER TABLE TB_WRISTBAND
    ADD CONSTRAINT wrt_type_fk FOREIGN KEY ( wrt_type_id )
        REFERENCES tb_wrt_type ( wrt_type_id )
ON DELETE NO ACTION 
    ON UPDATE no action 



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            45
-- CREATE INDEX                             3
-- ALTER TABLE                            103
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
